// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SK_Stanicni_Racuni.Models;

namespace SK_Stanicni_Racuni.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220119121206_AddK165aColumnToSlogKalk")]
    partial class AddK165aColumnToSlogKalk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.Komitent", b =>
                {
                    b.Property<string>("Adresa")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Land")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("Mesto")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Osoba")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Pib")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("PIB")
                        .IsFixedLength(true);

                    b.Property<int?>("Sapsifra")
                        .HasColumnType("int")
                        .HasColumnName("SAPSifra");

                    b.Property<int>("Sifra")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Zemlja")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable("Komitent");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.SlogKalk", b =>
                {
                    b.Property<int?>("BrojVoza")
                        .HasColumnType("int");

                    b.Property<int?>("BrojVoza2")
                        .HasColumnType("int");

                    b.Property<string>("CarAgent")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CarBrojFakture")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("CarDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarDokumenti")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("CarFaktura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CarJci")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("char(18)")
                        .HasColumnName("CarJCI")
                        .IsFixedLength(true);

                    b.Property<string>("CarKnjiga")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<string>("CarPostupakEnd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("CarPrimalacNaziv")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CarPrimalacPib")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CarPrimalacPIB")
                        .IsFixedLength(true);

                    b.Property<string>("CarPrimalacSediste")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CarPrimalacZemlja")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("CarRokCarinjenja")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarStanica")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("CarStanica2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("CarValuta")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("CarXml")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("DatumIzlaza")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DatumObrade")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DatumUlaza")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("DodPrev")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("FrDoPrelaza")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<string>("FrNaknade")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("FrRacun")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<string>("Incoterms")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Isporuka")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("IsporukaVal")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<int?>("IzEtiketa")
                        .HasColumnType("int");

                    b.Property<decimal?>("IzjavaIznos")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("IzjavaVal")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("K165a")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("K165a_datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Najava")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<string>("Najava2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<int?>("NajavaKola")
                        .HasColumnType("int");

                    b.Property<string>("NarPos")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<string>("ObrGodina")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<string>("ObrMesec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("Obrada")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<decimal?>("OstatakDin")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("OtpBroj")
                        .HasColumnType("int");

                    b.Property<DateTime>("OtpDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("OtpRbb")
                        .HasColumnType("int");

                    b.Property<string>("OtpStanica")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.Property<string>("OtpUprava")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<int?>("PlatilacFrr")
                        .HasColumnType("int")
                        .HasColumnName("PlatilacFRR");

                    b.Property<int?>("PlatilacNfr")
                        .HasColumnType("int")
                        .HasColumnName("PlatilacNFR");

                    b.Property<int?>("Posiljalac")
                        .HasColumnType("int");

                    b.Property<decimal?>("Pouzece")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("PouzeceVal")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<int?>("PrBroj")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PrDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PrRbb")
                        .HasColumnType("int");

                    b.Property<string>("PrStanica")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.Property<string>("PrUprava")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<string>("Prevoz")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("Primalac")
                        .HasColumnType("int");

                    b.Property<int?>("ProcenatTarifa")
                        .HasColumnType("int");

                    b.Property<int?>("ProcenatUg")
                        .HasColumnType("int");

                    b.Property<decimal?>("RNakFr")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rNakFr");

                    b.Property<decimal?>("RNakFrDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rNakFrDin");

                    b.Property<decimal?>("RNakUp")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rNakUp");

                    b.Property<decimal?>("RNakUpDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rNakUpDin");

                    b.Property<decimal?>("RPrevFr")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rPrevFr");

                    b.Property<decimal?>("RPrevFrDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rPrevFrDin");

                    b.Property<decimal?>("RPrevUp")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rPrevUp");

                    b.Property<decimal?>("RPrevUpDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rPrevUpDin");

                    b.Property<decimal?>("RSumaFr")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rSumaFr");

                    b.Property<decimal?>("RSumaFrDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rSumaFrDin");

                    b.Property<decimal?>("RSumaUp")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rSumaUp");

                    b.Property<decimal?>("RSumaUpDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("rSumaUpDin");

                    b.Property<int>("RecId")
                        .HasColumnType("int")
                        .HasColumnName("RecID");

                    b.Property<string>("Referent1")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<string>("Referent2")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<string>("Saobracaj")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("SatVoza")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("SatVoza2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("Server")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("SifraIzjave")
                        .HasColumnType("int");

                    b.Property<string>("SifraK211")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SifraTarife")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<int?>("SkmR")
                        .HasColumnType("int");

                    b.Property<int?>("SkmZs")
                        .HasColumnType("int")
                        .HasColumnName("SkmZS");

                    b.Property<string>("Stanica")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("StanicaRee")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<int?>("TkmR")
                        .HasColumnType("int");

                    b.Property<int?>("TkmZs")
                        .HasColumnType("int")
                        .HasColumnName("TkmZS");

                    b.Property<decimal?>("TlNakCo")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlNakCo");

                    b.Property<decimal?>("TlNakCo82")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlNakCo82");

                    b.Property<decimal?>("TlNakFr")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlNakFr");

                    b.Property<decimal?>("TlNakFrDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlNakFrDin");

                    b.Property<decimal?>("TlNakUp")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlNakUp");

                    b.Property<decimal?>("TlNakUpDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlNakUpDin");

                    b.Property<decimal?>("TlPrevFr")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlPrevFr");

                    b.Property<decimal?>("TlPrevFrDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlPrevFrDin");

                    b.Property<decimal?>("TlPrevUp")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlPrevUp");

                    b.Property<decimal?>("TlPrevUpDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlPrevUpDin");

                    b.Property<string>("TlRealizovan")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("tlRealizovan")
                        .IsFixedLength(true);

                    b.Property<decimal?>("TlSumaFr")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlSumaFr");

                    b.Property<decimal?>("TlSumaFrDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlSumaFrDin");

                    b.Property<decimal?>("TlSumaUp")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlSumaUp");

                    b.Property<decimal?>("TlSumaUpDin")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("tlSumaUpDin");

                    b.Property<string>("TlValuta")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("tlValuta")
                        .IsFixedLength(true);

                    b.Property<string>("Ugovor")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .IsFixedLength(true);

                    b.Property<int?>("UkupnoKola")
                        .HasColumnType("int");

                    b.Property<int?>("UlEtiketa")
                        .HasColumnType("int");

                    b.Property<string>("VrPos")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("VrPrevoza")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("VrSao")
                        .HasColumnType("int");

                    b.Property<decimal?>("VrednostRobe")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("VrednostRobeVal")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<string>("ZsIzPrelaz")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("ZsUlPrelaz")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.ToTable("SlogKalk");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.SlogKalkP", b =>
                {
                    b.Property<string>("PodStanica1")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("PodStanica2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<int>("RecId")
                        .HasColumnType("int")
                        .HasColumnName("RecID");

                    b.Property<string>("Stanica")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.ToTable("SlogKalkPS");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.SlogKalkPdv", b =>
                {
                    b.Property<decimal?>("Pdv1")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("PDV1");

                    b.Property<decimal?>("Pdv2")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("PDV2");

                    b.Property<int>("RecId")
                        .HasColumnType("int")
                        .HasColumnName("RecID");

                    b.Property<string>("Stanica")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.ToTable("SlogKalkPDV");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.SlogKola", b =>
                {
                    b.Property<int?>("GranTov")
                        .HasColumnType("int");

                    b.Property<string>("Ibk")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("IBK")
                        .IsFixedLength(true);

                    b.Property<string>("Icf")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("ICF")
                        .IsFixedLength(true);

                    b.Property<int>("KolaStavka")
                        .HasColumnType("int");

                    b.Property<string>("Kontrola")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Naknada")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int?>("Osovine")
                        .HasColumnType("int");

                    b.Property<int>("OtpBroj")
                        .HasColumnType("int");

                    b.Property<DateTime>("OtpDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("OtpStanica")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.Property<string>("OtpUprava")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Prevoznina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RecId")
                        .HasColumnType("int")
                        .HasColumnName("RecID");

                    b.Property<string>("Serija")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .IsFixedLength(true);

                    b.Property<string>("Stanica")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("Stitna")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("Tara")
                        .HasColumnType("int");

                    b.Property<string>("TipKola")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("Uprava")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .IsFixedLength(true);

                    b.Property<string>("Vlasnik")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.ToTable("SlogKola");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.SlogRoba", b =>
                {
                    b.Property<int>("KolaStavka")
                        .HasColumnType("int");

                    b.Property<string>("Nhm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("NHM")
                        .IsFixedLength(true);

                    b.Property<string>("Nhmrazred")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("NHMRazred")
                        .IsFixedLength(true);

                    b.Property<int>("OtpBroj")
                        .HasColumnType("int");

                    b.Property<DateTime>("OtpDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("OtpStanica")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.Property<string>("OtpUprava")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<int?>("PaleteBox")
                        .HasColumnType("int");

                    b.Property<int?>("PaleteR")
                        .HasColumnType("int");

                    b.Property<int>("RecId")
                        .HasColumnType("int")
                        .HasColumnName("RecID");

                    b.Property<string>("Rid")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("RID")
                        .IsFixedLength(true);

                    b.Property<string>("Ridklasa")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("RIDKlasa")
                        .IsFixedLength(true);

                    b.Property<string>("Ridrazred")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("RIDRazred")
                        .IsFixedLength(true);

                    b.Property<int?>("Rmasa")
                        .HasColumnType("int")
                        .HasColumnName("RMasa");

                    b.Property<int>("RobaStavka")
                        .HasColumnType("int");

                    b.Property<int?>("Smasa")
                        .HasColumnType("int")
                        .HasColumnName("SMasa");

                    b.Property<decimal?>("SmasaDec")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("SMasaDec");

                    b.Property<string>("Stanica")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("UtiBrPlombe")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength(true);

                    b.Property<string>("UtiIb")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("UtiIB")
                        .IsFixedLength(true);

                    b.Property<decimal?>("UtiNaknada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UtiNhm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("UtiNHM")
                        .IsFixedLength(true);

                    b.Property<string>("UtiPredajniList")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<decimal?>("UtiRaster")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UtiTara")
                        .HasColumnType("int");

                    b.Property<int?>("UtiTip")
                        .HasColumnType("int");

                    b.Property<decimal?>("VozStav")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("VozStavSifra")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.ToTable("SlogRoba");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.SrK121a", b =>
                {
                    b.Property<int?>("Blagajna")
                        .HasColumnType("int");

                    b.Property<string>("Blagajnik")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<int?>("Broj")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<decimal?>("Iznos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OtpBroj")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OtpDatum")
                        .HasColumnType("date");

                    b.Property<string>("Pošiljalac")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrStanica")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.Property<string>("Primalac")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrimalacAdresa")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrimalacZemlja")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Stanica")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.ToTable("SR_K121a");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.SrK161f", b =>
                {
                    b.Property<int?>("Blagajna")
                        .HasColumnType("int");

                    b.Property<string>("BlagajnaTip")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Blagajnik")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<string>("FakturaBroj")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FakturaDatum")
                        .HasColumnType("date");

                    b.Property<decimal?>("FakturaOsnovica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("FakturaPdv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("FakturaPDV")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Primalac")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrimalacAdresa")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrimalacMb")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("PrimalacMB")
                        .IsFixedLength(true);

                    b.Property<string>("PrimalacPib")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("PrimalacPIB")
                        .IsFixedLength(true);

                    b.Property<string>("PrimalacTelefon")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<string>("PrimalacTr")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("PrimalacTR")
                        .IsFixedLength(true);

                    b.Property<string>("PrimalacZemlja")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Stanica")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.Property<string>("VrstaUslugaOpis")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VrstaUslugaSifra")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.ToTable("SR_K161f");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.Ugovori", b =>
                {
                    b.Property<string>("BrojUgovora")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .IsFixedLength(true);

                    b.Property<string>("BrojUgovoraStari")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("DatumUnosa")
                        .HasColumnType("date");

                    b.Property<string>("Saobracaj")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int>("SifraKorisnika")
                        .HasColumnType("int");

                    b.Property<string>("TipUgovora")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("UgPath")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("UserID")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("VaziDo")
                        .HasColumnType("date")
                        .HasColumnName("VaziDO");

                    b.Property<DateTime?>("VaziOd")
                        .HasColumnType("date")
                        .HasColumnName("VaziOD");

                    b.Property<string>("VrstaKursaF")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("VrstaKursaT")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("VrstaObracuna")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.ToTable("Ugovori");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.UicOperateri", b =>
                {
                    b.Property<string>("Log")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("(log)")
                        .IsFixedLength(true);

                    b.Property<string>("Naziv")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("char(40)")
                        .IsFixedLength(true);

                    b.Property<string>("Operater")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("Oznaka")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .IsFixedLength(true);

                    b.Property<string>("Podaci")
                        .HasMaxLength(78)
                        .IsUnicode(false)
                        .HasColumnType("char(78)")
                        .IsFixedLength(true);

                    b.Property<string>("SifraOperatera")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<string>("SifraUprave")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("Zemlja")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.ToTable("UicOperateri");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.UicStanice", b =>
                {
                    b.Property<string>("Kb")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("KB")
                        .IsFixedLength(true);

                    b.Property<string>("Naziv")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength(true);

                    b.Property<string>("SifraStanice")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.Property<string>("SifraStanice1")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("_SifraStanice")
                        .IsFixedLength(true);

                    b.Property<string>("SifraUprave")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("_SifraUprave")
                        .IsFixedLength(true);

                    b.ToTable("UicStanice");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.UserTab", b =>
                {
                    b.Property<string>("Grupa")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength(true);

                    b.Property<string>("Lozinka")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .IsFixedLength(true);

                    b.Property<string>("Naziv")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength(true);

                    b.Property<string>("Stanica")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("UserID")
                        .IsFixedLength(true);

                    b.ToTable("UserTab");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.ZsPrelazi", b =>
                {
                    b.Property<int?>("Carina")
                        .HasColumnType("int");

                    b.Property<string>("GranicnaUprava")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("Naziv")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SifraCarina")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("SifraPrelaza")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("SifraPrelaza4")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.ToTable("ZsPrelazi");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.ZsStanice", b =>
                {
                    b.Property<int?>("Blagajna")
                        .HasColumnType("int");

                    b.Property<string>("Carina")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("CeonaRampa")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Dencano")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Dizalica")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Ekspres")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("KolskaVaga")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Kolsko")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Magacin")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("NadzornaStanicaNaziv")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NadzornaStanicaSifra")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ObicnaRampa")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Prikaz")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Prtljag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Putnicka")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("Region")
                        .HasColumnType("int");

                    b.Property<int?>("SifraDeonice")
                        .HasColumnType("int");

                    b.Property<int?>("SifraPruge")
                        .HasColumnType("int");

                    b.Property<int?>("SifraSekcije")
                        .HasColumnType("int");

                    b.Property<string>("SifraStanice")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.Property<string>("SifraStanice1")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("_SifraStanice")
                        .IsFixedLength(true);

                    b.Property<string>("SifraUprave")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("_SifraUprave")
                        .IsFixedLength(true);

                    b.Property<string>("SkupPodskup")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<string>("TovarniProfil")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Vrsta")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("X")
                        .HasColumnType("int")
                        .HasColumnName("_X");

                    b.Property<int?>("Y")
                        .HasColumnType("int")
                        .HasColumnName("_Y");

                    b.Property<string>("ZiveZivotinje")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("Ztp")
                        .HasColumnType("int");

                    b.ToTable("ZsStanice");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.ZsTarifa", b =>
                {
                    b.Property<string>("Naziv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Opis")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SifraTarife")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<int>("SifraVs")
                        .HasColumnType("int")
                        .HasColumnName("SifraVS");

                    b.Property<string>("TarifaStavka")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("VaziDo")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("VaziOd")
                        .HasColumnType("smalldatetime");

                    b.ToTable("ZsTarifa");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.ZsVrsteSaobracaja", b =>
                {
                    b.Property<string>("Saobracaj")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("SifraVs")
                        .HasColumnType("int")
                        .HasColumnName("SifraVS");

                    b.ToTable("ZsVrsteSaobracaja");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.Models.ZsVsStavke", b =>
                {
                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength(true);

                    b.Property<int>("SifraVs")
                        .HasColumnType("int")
                        .HasColumnName("SifraVS");

                    b.Property<int>("SifraVsStavka")
                        .HasColumnType("int");

                    b.ToTable("ZsVsStavke");
                });

            modelBuilder.Entity("SK_Stanicni_Racuni.ViewModels.SlogKalkSlogKolaZsTarifaZsPrelaziViewModel", b =>
                {
                    b.ToTable("SlogKalkSlogKolaZsTarifaZsPrelaziViewModel");
                });
#pragma warning restore 612, 618
        }
    }
}
